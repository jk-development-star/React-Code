import React, { useRef, useEffect } from "react";
import { Button } from "react-bootstrap";
import Navbars from "../Navbar";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faTrash, faEdit, faPlus } from "@fortawesome/free-solid-svg-icons";
import { Link } from "react-router-dom";
import SideBar from "../SideBar";
import OwnerDetailModal from "../modals/OwnerDetailsModal";
import { useSelector, useDispatch } from "react-redux";
import { ToastContainer } from "react-toastify";
import { findLead, totalLead } from "../../actions/LeadActions";

function LeadList() {
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(totalLead);
  }, []);
  const leads = useSelector((state) => state.lead);

  // const user = useSelector((state) => state.user.totalUser);
  const ref = useRef(null);

  return (
    <>
      <ToastContainer />
      <div className="container-fluid">
        <div className="row">
          <div className="col-lg-2 col-md-2">
            <SideBar />
          </div>
          <div className="col-lg-10 col-md-10 mt-2">
            <Navbars />
            <div className="text">
              <h3>Leads</h3>
            </div>
            <div className="list mt-4">
              <div className="add-button">
                <Link to="/leads">
                  <Button
                    className=" btn btn-success mb-2"
                    variant="success"
                    active
                  >
                    <FontAwesomeIcon icon={faPlus} /> Add New Lead
                  </Button>
                </Link>
              </div>
              <table id="example" className="table table-striped">
                <thead>
                  <tr>
                    <th>Lead Number</th>
                    <th>Details Of Lead</th>
                    <th>Budget</th>
                    <th>Status</th>
                    <th>Covered Area</th>
                    <th>Assigned To</th>
                    <th>Generated By</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  {leads.lead != null && leads.lead !== 0 ? (
                    leads.lead.map((value, index) => (
                      <tr key={index}>
                        <td>{value.lead_id}</td>
                        <td>
                          <button
                            ref={ref}
                            className="btn btn-light"
                            data-bs-toggle="modal"
                            data-bs-target={`#exampleModal${value.id}`}
                          >
                            View Detail
                          </button>
                          <OwnerDetailModal
                            lead={value}
                            title="Lead"
                            id={value.id}
                          />
                        </td>
                        <td>{value.lead_budget}</td>
                        <td>
                          {value.lead_status === 1 ? (
                            <p className="btn-success">Active</p>
                          ) : (
                            ""
                          )}
                          {value.lead_status === 2 ? (
                            <p className="btn-info">Follow Up</p>
                          ) : (
                            ""
                          )}
                          {value.lead_status === 0 ? (
                            <p className="btn-danger">In-Active</p>
                          ) : (
                            ""
                          )}
                        </td>
                        <td>{value.covered_aread} SqFt</td>

                        <td>
                          {value.AssignedTo.first_name}{" "}
                          {value.AssignedTo.last_name}
                        </td>
                        <td>
                          {value.GeneratedBy.first_name}{" "}
                          {value.GeneratedBy.last_name}
                        </td>
                        <td className="buttons d-flex justify-content-center">
                          <Link to={`/edit/lead/${value.id}`}>
                            <button
                              className="btn btn-success col-3"
                              title="Edit"
                              active="true"
                              onClick={() => dispatch(findLead(value.id))}
                            >
                              <FontAwesomeIcon icon={faEdit} />
                            </button>
                          </Link>
                          <button
                            // onClick={(e) => deletelead(e, user.id)}
                            className="btn btn-danger col-3"
                            active="true"
                            title="Delete"
                          >
                            <FontAwesomeIcon icon={faTrash} />
                          </button>
                        </td>
                      </tr>
                    ))
                  ) : (
                    <tr>
                      <td colSpan="6" style={{ textAlign: "center" }}>
                        No data found
                      </td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                      <td style={{ display: "none" }}></td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

export default LeadList;
